{"version":3,"file":"static/js/509.89de3112.chunk.js","mappings":"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","sources":["components/Image.js","components/Page.js","redux/slices/calendar.js","redux/slices/product.js","redux/slices/mail.js","redux/slices/chat.js","redux/slices/kanban.js","redux/rootReducer.js","redux/store.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n// @mui\nimport { Box } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nImage.propTypes = {\n  disabledEffect: PropTypes.bool,\n  effect: PropTypes.string,\n  ratio: PropTypes.oneOf(['4/3', '3/4', '6/4', '4/6', '16/9', '9/16', '21/9', '9/21', '1/1']),\n  sx: PropTypes.object,\n};\n\nexport default function Image({ ratio, disabledEffect = false, effect = 'blur', sx, ...other }) {\n  if (ratio) {\n    return (\n      <Box\n        component=\"span\"\n        sx={{\n          width: 1,\n          lineHeight: 0,\n          display: 'block',\n          overflow: 'hidden',\n          position: 'relative',\n          pt: getRatio(ratio),\n          '& .wrapper': {\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            lineHeight: 0,\n            position: 'absolute',\n            backgroundSize: 'cover !important',\n          },\n          ...sx,\n        }}\n      >\n        <Box\n          component={LazyLoadImage}\n          wrapperClassName=\"wrapper\"\n          effect={disabledEffect ? undefined : effect}\n          placeholderSrc=\"https://zone-assets-api.vercel.app/assets/img_placeholder.svg\"\n          sx={{ width: 1, height: 1, objectFit: 'cover' }}\n          {...other}\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <Box\n      component=\"span\"\n      sx={{\n        lineHeight: 0,\n        display: 'block',\n        overflow: 'hidden',\n        '& .wrapper': { width: 1, height: 1, backgroundSize: 'cover !important' },\n        ...sx,\n      }}\n    >\n      <Box\n        component={LazyLoadImage}\n        wrapperClassName=\"wrapper\"\n        effect={disabledEffect ? undefined : effect}\n        placeholderSrc=\"https://zone-assets-api.vercel.app/assets/img_placeholder.svg\"\n        sx={{ width: 1, height: 1, objectFit: 'cover' }}\n        {...other}\n      />\n    </Box>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction getRatio(ratio = '1/1') {\n  return {\n    '4/3': 'calc(100% / 4 * 3)',\n    '3/4': 'calc(100% / 3 * 4)',\n    '6/4': 'calc(100% / 6 * 4)',\n    '4/6': 'calc(100% / 4 * 6)',\n    '16/9': 'calc(100% / 16 * 9)',\n    '9/16': 'calc(100% / 9 * 16)',\n    '21/9': 'calc(100% / 21 * 9)',\n    '9/21': 'calc(100% / 9 * 21)',\n    '1/1': '100%',\n  }[ratio];\n}\n","import PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\nimport { forwardRef } from 'react';\n// @mui\nimport { Box } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst Page = forwardRef(({ children, title = '', meta, ...other }, ref) => (\n  <>\n    <Helmet>\n      <title>{`${title} | Minimal-UI`}</title>\n      {meta}\n    </Helmet>\n\n    <Box ref={ref} {...other}>\n      {children}\n    </Box>\n  </>\n));\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n  meta: PropTypes.node,\n};\n\nexport default Page;\n","import { createSlice } from '@reduxjs/toolkit';\n// utils\nimport axios from '../../utils/axios';\n//\nimport { dispatch } from '../store';\n\n// ----------------------------------------------------------------------\n\nconst initialState = {\n  isLoading: false,\n  error: null,\n  events: [],\n  isOpenModal: false,\n  selectedEventId: null,\n  selectedRange: null,\n};\n\nconst slice = createSlice({\n  name: 'calendar',\n  initialState,\n  reducers: {\n    // START LOADING\n    startLoading(state) {\n      state.isLoading = true;\n    },\n\n    // HAS ERROR\n    hasError(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n\n    // GET EVENTS\n    getEventsSuccess(state, action) {\n      state.isLoading = false;\n      state.events = action.payload;\n    },\n\n    // CREATE EVENT\n    createEventSuccess(state, action) {\n      const newEvent = action.payload;\n      state.isLoading = false;\n      state.events = [...state.events, newEvent];\n    },\n\n    // UPDATE EVENT\n    updateEventSuccess(state, action) {\n      const event = action.payload;\n      const updateEvent = state.events.map((_event) => {\n        if (_event.id === event.id) {\n          return event;\n        }\n        return _event;\n      });\n\n      state.isLoading = false;\n      state.events = updateEvent;\n    },\n\n    // DELETE EVENT\n    deleteEventSuccess(state, action) {\n      const { eventId } = action.payload;\n      const deleteEvent = state.events.filter((event) => event.id !== eventId);\n      state.events = deleteEvent;\n    },\n\n    // SELECT EVENT\n    selectEvent(state, action) {\n      const eventId = action.payload;\n      state.isOpenModal = true;\n      state.selectedEventId = eventId;\n    },\n\n    // SELECT RANGE\n    selectRange(state, action) {\n      const { start, end } = action.payload;\n      state.isOpenModal = true;\n      state.selectedRange = { start, end };\n    },\n\n    // OPEN MODAL\n    openModal(state) {\n      state.isOpenModal = true;\n    },\n\n    // CLOSE MODAL\n    closeModal(state) {\n      state.isOpenModal = false;\n      state.selectedEventId = null;\n      state.selectedRange = null;\n    },\n  },\n});\n\n// Reducer\nexport default slice.reducer;\n\n// Actions\nexport const { openModal, closeModal, selectEvent } = slice.actions;\n\n// ----------------------------------------------------------------------\n\nexport function getEvents() {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.get('/api/calendar/events');\n      dispatch(slice.actions.getEventsSuccess(response.data.events));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function createEvent(newEvent) {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.post('/api/calendar/events/new', newEvent);\n      dispatch(slice.actions.createEventSuccess(response.data.event));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function updateEvent(eventId, updateEvent) {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.post('/api/calendar/events/update', {\n        eventId,\n        updateEvent,\n      });\n      dispatch(slice.actions.updateEventSuccess(response.data.event));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function deleteEvent(eventId) {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      await axios.post('/api/calendar/events/delete', { eventId });\n      dispatch(slice.actions.deleteEventSuccess({ eventId }));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function selectRange(start, end) {\n  return async () => {\n    dispatch(\n      slice.actions.selectRange({\n        start: start.getTime(),\n        end: end.getTime(),\n      })\n    );\n  };\n}\n","import { createSlice } from '@reduxjs/toolkit';\nimport sum from 'lodash/sum';\nimport uniqBy from 'lodash/uniqBy';\n// utils\nimport axios from '../../utils/axios';\n//\nimport { dispatch } from '../store';\n\n// ----------------------------------------------------------------------\n\nconst initialState = {\n  isLoading: false,\n  error: null,\n  products: [],\n  product: null,\n  sortBy: null,\n  filters: {\n    gender: [],\n    category: 'All',\n    colors: [],\n    priceRange: '',\n    rating: '',\n  },\n  checkout: {\n    activeStep: 0,\n    cart: [],\n    subtotal: 0,\n    total: 0,\n    discount: 0,\n    shipping: 0,\n    billing: null,\n  },\n};\n\nconst slice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {\n    // START LOADING\n    startLoading(state) {\n      state.isLoading = true;\n    },\n\n    // HAS ERROR\n    hasError(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n\n    // GET PRODUCTS\n    getProductsSuccess(state, action) {\n      state.isLoading = false;\n      state.products = action.payload;\n    },\n\n    // GET PRODUCT\n    getProductSuccess(state, action) {\n      state.isLoading = false;\n      state.product = action.payload;\n    },\n\n    //  SORT & FILTER PRODUCTS\n    sortByProducts(state, action) {\n      state.sortBy = action.payload;\n    },\n\n    filterProducts(state, action) {\n      state.filters.gender = action.payload.gender;\n      state.filters.category = action.payload.category;\n      state.filters.colors = action.payload.colors;\n      state.filters.priceRange = action.payload.priceRange;\n      state.filters.rating = action.payload.rating;\n    },\n\n    // CHECKOUT\n    getCart(state, action) {\n      const cart = action.payload;\n\n      const subtotal = sum(cart.map((cartItem) => cartItem.price * cartItem.quantity));\n      const discount = cart.length === 0 ? 0 : state.checkout.discount;\n      const shipping = cart.length === 0 ? 0 : state.checkout.shipping;\n      const billing = cart.length === 0 ? null : state.checkout.billing;\n\n      state.checkout.cart = cart;\n      state.checkout.discount = discount;\n      state.checkout.shipping = shipping;\n      state.checkout.billing = billing;\n      state.checkout.subtotal = subtotal;\n      state.checkout.total = subtotal - discount;\n    },\n\n    addCart(state, action) {\n      const product = action.payload;\n      const isEmptyCart = state.checkout.cart.length === 0;\n\n      if (isEmptyCart) {\n        state.checkout.cart = [...state.checkout.cart, product];\n      } else {\n        state.checkout.cart = state.checkout.cart.map((_product) => {\n          const isExisted = _product.id === product.id;\n          if (isExisted) {\n            return {\n              ..._product,\n              quantity: _product.quantity + 1,\n            };\n          }\n          return _product;\n        });\n      }\n      state.checkout.cart = uniqBy([...state.checkout.cart, product], 'id');\n    },\n\n    deleteCart(state, action) {\n      const updateCart = state.checkout.cart.filter((item) => item.id !== action.payload);\n\n      state.checkout.cart = updateCart;\n    },\n\n    resetCart(state) {\n      state.checkout.activeStep = 0;\n      state.checkout.cart = [];\n      state.checkout.total = 0;\n      state.checkout.subtotal = 0;\n      state.checkout.discount = 0;\n      state.checkout.shipping = 0;\n      state.checkout.billing = null;\n    },\n\n    onBackStep(state) {\n      state.checkout.activeStep -= 1;\n    },\n\n    onNextStep(state) {\n      state.checkout.activeStep += 1;\n    },\n\n    onGotoStep(state, action) {\n      const goToStep = action.payload;\n      state.checkout.activeStep = goToStep;\n    },\n\n    increaseQuantity(state, action) {\n      const productId = action.payload;\n      const updateCart = state.checkout.cart.map((product) => {\n        if (product.id === productId) {\n          return {\n            ...product,\n            quantity: product.quantity + 1,\n          };\n        }\n        return product;\n      });\n\n      state.checkout.cart = updateCart;\n    },\n\n    decreaseQuantity(state, action) {\n      const productId = action.payload;\n      const updateCart = state.checkout.cart.map((product) => {\n        if (product.id === productId) {\n          return {\n            ...product,\n            quantity: product.quantity - 1,\n          };\n        }\n        return product;\n      });\n\n      state.checkout.cart = updateCart;\n    },\n\n    createBilling(state, action) {\n      state.checkout.billing = action.payload;\n    },\n\n    applyDiscount(state, action) {\n      const discount = action.payload;\n      state.checkout.discount = discount;\n      state.checkout.total = state.checkout.subtotal - discount;\n    },\n\n    applyShipping(state, action) {\n      const shipping = action.payload;\n      state.checkout.shipping = shipping;\n      state.checkout.total = state.checkout.subtotal - state.checkout.discount + shipping;\n    },\n  },\n});\n\n// Reducer\nexport default slice.reducer;\n\n// Actions\nexport const {\n  getCart,\n  addCart,\n  resetCart,\n  onGotoStep,\n  onBackStep,\n  onNextStep,\n  deleteCart,\n  createBilling,\n  applyShipping,\n  applyDiscount,\n  increaseQuantity,\n  decreaseQuantity,\n  sortByProducts,\n  filterProducts,\n} = slice.actions;\n\n// ----------------------------------------------------------------------\n\nexport function getProducts() {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.get('/api/products');\n      dispatch(slice.actions.getProductsSuccess(response.data.products));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function getProduct(name) {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.get('/api/products/product', {\n        params: { name },\n      });\n      dispatch(slice.actions.getProductSuccess(response.data.product));\n    } catch (error) {\n      console.error(error);\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n","import { createSlice } from '@reduxjs/toolkit';\n// utils\nimport axios from '../../utils/axios';\n//\nimport { dispatch } from '../store';\n\n// ----------------------------------------------------------------------\n\nfunction objFromArray(array, key = 'id') {\n  return array.reduce((accumulator, current) => {\n    accumulator[current[key]] = current;\n    return accumulator;\n  }, {});\n}\n\nconst initialState = {\n  isLoading: false,\n  error: null,\n  mails: { byId: {}, allIds: [] },\n  labels: [],\n};\n\nconst slice = createSlice({\n  name: 'mail',\n  initialState,\n  reducers: {\n    // START LOADING\n    startLoading(state) {\n      state.isLoading = true;\n    },\n\n    // HAS ERROR\n    hasError(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n\n    // GET LABELS\n    getLabelsSuccess(state, action) {\n      state.isLoading = false;\n      state.labels = action.payload;\n    },\n\n    // GET MAILS\n    getMailsSuccess(state, action) {\n      const mails = action.payload;\n\n      state.isLoading = false;\n      state.mails.byId = objFromArray(mails);\n      state.mails.allIds = Object.keys(state.mails.byId);\n    },\n\n    // GET MAIL\n    getMailSuccess(state, action) {\n      const mail = action.payload;\n\n      state.mails.byId[mail.id] = mail;\n      if (!state.mails.allIds.includes(mail.id)) {\n        state.mails.allIds.push(mail.id);\n      }\n    },\n  },\n});\n\n// Reducer\nexport default slice.reducer;\n\n// ----------------------------------------------------------------------\n\nexport function getLabels() {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.get('/api/mail/labels');\n      dispatch(slice.actions.getLabelsSuccess(response.data.labels));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function getMails(params) {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.get('/api/mail/mails', { params });\n      dispatch(slice.actions.getMailsSuccess(response.data.mails));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function getMail(mailId) {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.get('/api/mail/mail', {\n        params: { mailId },\n      });\n      dispatch(slice.actions.getMailSuccess(response.data.mail));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n","import { createSlice } from '@reduxjs/toolkit';\n// utils\nimport axios from '../../utils/axios';\n//\nimport { dispatch } from '../store';\n\n// ----------------------------------------------------------------------\n\nfunction objFromArray(array, key = 'id') {\n  return array.reduce((accumulator, current) => {\n    accumulator[current[key]] = current;\n    return accumulator;\n  }, {});\n}\n\nconst initialState = {\n  isLoading: false,\n  error: null,\n  contacts: { byId: {}, allIds: [] },\n  conversations: { byId: {}, allIds: [] },\n  activeConversationId: null,\n  participants: [],\n  recipients: [],\n};\n\nconst slice = createSlice({\n  name: 'chat',\n  initialState,\n  reducers: {\n    // START LOADING\n    startLoading(state) {\n      state.isLoading = true;\n    },\n\n    // HAS ERROR\n    hasError(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n\n    // GET CONTACT SSUCCESS\n    getContactsSuccess(state, action) {\n      const contacts = action.payload;\n\n      state.contacts.byId = objFromArray(contacts);\n      state.contacts.allIds = Object.keys(state.contacts.byId);\n    },\n\n    // GET CONVERSATIONS\n    getConversationsSuccess(state, action) {\n      const conversations = action.payload;\n\n      state.conversations.byId = objFromArray(conversations);\n      state.conversations.allIds = Object.keys(state.conversations.byId);\n    },\n\n    // GET CONVERSATION\n    getConversationSuccess(state, action) {\n      const conversation = action.payload;\n\n      if (conversation) {\n        state.conversations.byId[conversation.id] = conversation;\n        state.activeConversationId = conversation.id;\n        if (!state.conversations.allIds.includes(conversation.id)) {\n          state.conversations.allIds.push(conversation.id);\n        }\n      } else {\n        state.activeConversationId = null;\n      }\n    },\n\n    // ON SEND MESSAGE\n    onSendMessage(state, action) {\n      const conversation = action.payload;\n      const { conversationId, messageId, message, contentType, attachments, createdAt, senderId } = conversation;\n\n      const newMessage = {\n        id: messageId,\n        body: message,\n        contentType,\n        attachments,\n        createdAt,\n        senderId,\n      };\n\n      state.conversations.byId[conversationId].messages.push(newMessage);\n    },\n\n    markConversationAsReadSuccess(state, action) {\n      const { conversationId } = action.payload;\n      const conversation = state.conversations.byId[conversationId];\n      if (conversation) {\n        conversation.unreadCount = 0;\n      }\n    },\n\n    // GET PARTICIPANTS\n    getParticipantsSuccess(state, action) {\n      const participants = action.payload;\n      state.participants = participants;\n    },\n\n    // RESET ACTIVE CONVERSATION\n    resetActiveConversation(state) {\n      state.activeConversationId = null;\n    },\n\n    addRecipients(state, action) {\n      const recipients = action.payload;\n      state.recipients = recipients;\n    },\n  },\n});\n\n// Reducer\nexport default slice.reducer;\n\n// Actions\nexport const { addRecipients, onSendMessage, resetActiveConversation } = slice.actions;\n\n// ----------------------------------------------------------------------\n\nexport function getContacts() {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.get('/api/chat/contacts');\n      dispatch(slice.actions.getContactsSuccess(response.data.contacts));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function getConversations() {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.get('/api/chat/conversations');\n      dispatch(slice.actions.getConversationsSuccess(response.data.conversations));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function getConversation(conversationKey) {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.get('/api/chat/conversation', {\n        params: { conversationKey },\n      });\n      dispatch(slice.actions.getConversationSuccess(response.data.conversation));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function markConversationAsRead(conversationId) {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      await axios.get('/api/chat/conversation/mark-as-seen', {\n        params: { conversationId },\n      });\n      dispatch(slice.actions.markConversationAsReadSuccess({ conversationId }));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function getParticipants(conversationKey) {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.get('/api/chat/participants', {\n        params: { conversationKey },\n      });\n      dispatch(slice.actions.getParticipantsSuccess(response.data.participants));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n","import { createSlice } from '@reduxjs/toolkit';\nimport omit from 'lodash/omit';\n// utils\nimport axios from '../../utils/axios';\n//\nimport { dispatch } from '../store';\n\n// ----------------------------------------------------------------------\n\nfunction objFromArray(array, key = 'id') {\n  return array.reduce((accumulator, current) => {\n    accumulator[current[key]] = current;\n    return accumulator;\n  }, {});\n}\n\nconst initialState = {\n  isLoading: false,\n  error: null,\n  board: {\n    cards: {},\n    columns: {},\n    columnOrder: [],\n  },\n};\n\nconst slice = createSlice({\n  name: 'kanban',\n  initialState,\n  reducers: {\n    // START LOADING\n    startLoading(state) {\n      state.isLoading = true;\n    },\n\n    // HAS ERROR\n    hasError(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n\n    // GET BOARD\n    getBoardSuccess(state, action) {\n      state.isLoading = false;\n      const board = action.payload;\n      const cards = objFromArray(board.cards);\n      const columns = objFromArray(board.columns);\n      const { columnOrder } = board;\n      state.board = {\n        cards,\n        columns,\n        columnOrder,\n      };\n    },\n\n    // CREATE NEW COLUMN\n    createColumnSuccess(state, action) {\n      const newColumn = action.payload;\n      state.isLoading = false;\n      state.board.columns = {\n        ...state.board.columns,\n        [newColumn.id]: newColumn,\n      };\n      state.board.columnOrder.push(newColumn.id);\n    },\n\n    persistCard(state, action) {\n      const columns = action.payload;\n      state.board.columns = columns;\n    },\n\n    persistColumn(state, action) {\n      state.board.columnOrder = action.payload;\n    },\n\n    addTask(state, action) {\n      const { card, columnId } = action.payload;\n\n      state.board.cards[card.id] = card;\n      state.board.columns[columnId].cardIds.push(card.id);\n    },\n\n    deleteTask(state, action) {\n      const { cardId, columnId } = action.payload;\n\n      state.board.columns[columnId].cardIds = state.board.columns[columnId].cardIds.filter((id) => id !== cardId);\n      state.board.cards = omit(state.board.cards, [cardId]);\n    },\n\n    // UPDATE COLUMN\n    updateColumnSuccess(state, action) {\n      const column = action.payload;\n\n      state.isLoading = false;\n      state.board.columns[column.id] = column;\n    },\n\n    // DELETE COLUMN\n    deleteColumnSuccess(state, action) {\n      const { columnId } = action.payload;\n      const deletedColumn = state.board.columns[columnId];\n\n      state.isLoading = false;\n      state.board.columns = omit(state.board.columns, [columnId]);\n      state.board.cards = omit(state.board.cards, [...deletedColumn.cardIds]);\n      state.board.columnOrder = state.board.columnOrder.filter((c) => c !== columnId);\n    },\n  },\n});\n\n// Reducer\nexport default slice.reducer;\n\nexport const { actions } = slice;\n\n// ----------------------------------------------------------------------\n\nexport function getBoard() {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.get('/api/kanban/board');\n      dispatch(slice.actions.getBoardSuccess(response.data.board));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function createColumn(newColumn) {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.post('/api/kanban/columns/new', newColumn);\n      dispatch(slice.actions.createColumnSuccess(response.data.column));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function updateColumn(columnId, updateColumn) {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.post('/api/kanban/columns/update', {\n        columnId,\n        updateColumn,\n      });\n      dispatch(slice.actions.updateColumnSuccess(response.data.column));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function deleteColumn(columnId) {\n  return async () => {\n    dispatch(slice.actions.startLoading());\n    try {\n      await axios.post('/api/kanban/columns/delete', { columnId });\n      dispatch(slice.actions.deleteColumnSuccess({ columnId }));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function persistColumn(newColumnOrder) {\n  return () => {\n    dispatch(slice.actions.persistColumn(newColumnOrder));\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function persistCard(columns) {\n  return () => {\n    dispatch(slice.actions.persistCard(columns));\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function addTask({ card, columnId }) {\n  return () => {\n    dispatch(slice.actions.addTask({ card, columnId }));\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function deleteTask({ cardId, columnId }) {\n  return (dispatch) => {\n    dispatch(slice.actions.deleteTask({ cardId, columnId }));\n  };\n}\n","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n// slices\nimport mailReducer from './slices/mail';\nimport chatReducer from './slices/chat';\nimport productReducer from './slices/product';\nimport calendarReducer from './slices/calendar';\nimport kanbanReducer from './slices/kanban';\n\n// ----------------------------------------------------------------------\n\nconst rootPersistConfig = {\n  key: 'root',\n  storage,\n  keyPrefix: 'redux-',\n  whitelist: [],\n};\n\nconst productPersistConfig = {\n  key: 'product',\n  storage,\n  keyPrefix: 'redux-',\n  whitelist: ['sortBy', 'checkout'],\n};\n\nconst rootReducer = combineReducers({\n  mail: mailReducer,\n  chat: chatReducer,\n  calendar: calendarReducer,\n  kanban: kanbanReducer,\n  product: persistReducer(productPersistConfig, productReducer),\n});\n\nexport { rootPersistConfig, rootReducer };\n","import { configureStore } from '@reduxjs/toolkit';\nimport { useDispatch as useAppDispatch, useSelector as useAppSelector } from 'react-redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { rootPersistConfig, rootReducer } from './rootReducer';\n\n// ----------------------------------------------------------------------\n\nconst store = configureStore({\n  reducer: persistReducer(rootPersistConfig, rootReducer),\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n      immutableCheck: false,\n    }),\n});\n\nconst persistor = persistStore(store);\n\nconst { dispatch } = store;\n\nconst useSelector = useAppSelector;\n\nconst useDispatch = () => useAppDispatch();\n\nexport { store, persistor, dispatch, useSelector, useDispatch };\n"],"names":["Image","ratio","disabledEffect","effect","sx","other","component","width","lineHeight","display","overflow","position","pt","getRatio","top","left","right","bottom","backgroundSize","LazyLoadImage","wrapperClassName","undefined","placeholderSrc","height","objectFit","Page","forwardRef","ref","children","title","meta","propTypes","PropTypes","slice","createSlice","name","initialState","isLoading","error","events","isOpenModal","selectedEventId","selectedRange","reducers","startLoading","state","hasError","action","payload","getEventsSuccess","createEventSuccess","newEvent","updateEventSuccess","event","updateEvent","map","_event","id","deleteEventSuccess","eventId","deleteEvent","filter","selectEvent","selectRange","start","end","openModal","closeModal","actions","products","product","sortBy","filters","gender","category","colors","priceRange","rating","checkout","activeStep","cart","subtotal","total","discount","shipping","billing","getProductsSuccess","getProductSuccess","sortByProducts","filterProducts","getCart","sum","cartItem","price","quantity","length","addCart","isEmptyCart","_product","uniqBy","deleteCart","updateCart","item","resetCart","onBackStep","onNextStep","onGotoStep","goToStep","increaseQuantity","productId","decreaseQuantity","createBilling","applyDiscount","applyShipping","mails","byId","allIds","labels","getLabelsSuccess","getMailsSuccess","array","key","reduce","accumulator","current","objFromArray","Object","keys","getMailSuccess","mail","includes","push","contacts","conversations","activeConversationId","participants","recipients","getContactsSuccess","getConversationsSuccess","getConversationSuccess","conversation","onSendMessage","conversationId","newMessage","messageId","body","message","contentType","attachments","createdAt","senderId","messages","markConversationAsReadSuccess","unreadCount","getParticipantsSuccess","resetActiveConversation","addRecipients","board","cards","columns","columnOrder","getBoardSuccess","createColumnSuccess","newColumn","persistCard","persistColumn","addTask","card","columnId","cardIds","deleteTask","cardId","omit","updateColumnSuccess","column","deleteColumnSuccess","deletedColumn","c","rootPersistConfig","storage","keyPrefix","whitelist","productPersistConfig","rootReducer","combineReducers","mailReducer","chat","chatReducer","calendar","calendarReducer","kanban","kanbanReducer","persistReducer","productReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","immutableCheck","persistStore","dispatch","useAppSelector"],"sourceRoot":""}